[tool.poetry]
name = "zerolink"
version = "0.1.0"
description = "Example inteference usage of ZeroLink"
packages = [
    { include = "zerolink", from = "src" },
]
authors = ["Stephen Diehl <stephen@zerolink.io>",]
maintainers = ["Stephen Diehl <stephen@zerolink.io>",]
include = ["CHANGELOG.md", "LICENSE", "README.md", "py.typed",]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://pypi.org/project/project-name/"
repository = "https://github.com/zerolink.io/project-name"
documentation = "https://docs.zerolink.io"

keywords = [
    "python3",
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = ">3.8,<3.12"
black = "^24.2.0"

[tool.poetry.group.mlx]
optional = true

[tool.poetry.group.vllm]
optional = true

[tool.poetry.group.llamacpp]
optional = true

[tool.poetry.group.mlx.dependencies]
mlx = "^0.6.0"
mlx-lm = "^0.1.0"

[tool.poetry.group.vllm.dependencies]
vllm = "^0.3.3"
torch = ">2.0.1"
transformers = "^4.38.2"

[tool.poetry.group.llamacpp.dependencies]
llama-cpp-python = "^0.2.55"


[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^24.2.0"}
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
ruff = "^0.3.1"
mypy = "^1.8.0"

[tool.black]
target-version = ['py39']
exclude = '.venv'


[build-system]
requires = ["poetry-core>=1.2.0", "wheel",]
build-backend = "poetry.core.masonry.api"


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "tests/*",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--ignore=docs/
"""
testpaths = [
    "tests",
]
enable_assertion_pass_hook = true
pythonpath = [
  "src"
]


[tool.ruff]
line-length = 160
# preview = true
show-fixes = true
src = ["src",]
target-version = "py38"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.mypy]
disallow_incomplete_defs = "false"
disallow_untyped_defs = "false"
#strict = "true"
pretty = "true"
warn_return_any = "true"
warn_unused_configs = "true"
warn_redundant_casts = "true"
warn_unused_ignores = "true"
ignore_missing_imports = "true"
no_implicit_reexport = "true"
strict_optional = "true"
strict_equality = "true"
extra_checks = "true"
check_untyped_defs = "true"
disallow_subclassing_any = "true"
disallow_untyped_decorators = "true"
disallow_untyped_calls = "true"
disallow_any_generics = "true"
#exclude = ""
follow_imports = "silent"
